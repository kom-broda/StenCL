#ifndef __STENCL_H__
#define __STENCL_H__

#ifdef __APPLE__
#include <OpenCL/opencl.h>
#else
#include <CL/cl.h>
#endif

/* Can switch DATA_TYPE between float and double */
typedef float DATA_TYPE;

/* Load the kernel source code into the array source_str */
char * read_cl_file(char *kernel_name, size_t *source_size);

/* Initialize OpenCL context */
cl_int cl_initialization(cl_device_id *device_id, cl_context *clGPUContext, cl_command_queue *clCommandQue);

/* Load OpenCL program from kernel source */
//cl_int cl_load_prog(cl_program *clProgram, cl_context *clGPUContext, cl_device_id *device_id, char *source_str, size_t source_size);

/* Initialize 1D array with random values */
DATA_TYPE *init_1d_array(DATA_TYPE *set, const size_t DIM_X);

/* Initialize 2D array with random values */
DATA_TYPE **init_2d_array(DATA_TYPE **set, const size_t DIM_X, const size_t DIM_Y);

/* Initialize 3D array with random values */
DATA_TYPE ***init_3d_array(DATA_TYPE ***set, const size_t DIM_X, const size_t DIM_Y, const size_t DIM_Z);

/* Compare the 1D arrays a and b */
void compare_results_1d(DATA_TYPE* a, DATA_TYPE* b, const size_t DIM_X, float threshold);

/* Compare the 2D arrays a and b */
void compare_results_2d(DATA_TYPE **a, DATA_TYPE **b, const size_t DIM_X, const size_t DIM_Y, float threshold);

/* Compare the 3D arrays a and b */
void compare_results_3d(DATA_TYPE ***a, DATA_TYPE ***b, const size_t DIM_X, const size_t DIM_Y, const size_t DIM_Z, float threshold);

#endif /* __STENCL_H__ */
